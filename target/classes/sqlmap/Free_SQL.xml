<?xml version="1.0" encoding="UTF-8"?>

<!-- https://mybatis.org/mybatis-3/getting-started.html#exploring-mapped-sql-statements -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  
<mapper namespace="Free">

	<sql id="freeSearch">
		<if test="searchType != null and searchType == 'title'">
		and (botitle like '%' || #{searchWord}||'%')
		</if>
		<if test="searchType != null and searchType == 'writer'">
		and (bowriter like '%' || #{searchWord}||'%')
		</if>
		<if test="searchType != null and searchType == 'titleWriter'">
		and (bowriter like '%' || #{searchWord}||'%' or botitle like '%' || #{searchWord}||'%' )
		</if>
	</sql>



	<insert id="insertFree" parameterType="freeVO" useGeneratedKeys="true">
		<selectKey keyProperty="boNo" order="BEFORE" resultType="int">
			select seq_free.nextval from dual
		</selectKey>
	
		insert into free(
			bono, botitle, bocontent, bowriter, bodate
		) values(
			#{boNo}, #{boTitle}, #{boContent}, #{boWriter}, sysdate
		)
	</insert>

	<select id="selectFreeList" resultType="freeVO">
		select
			bono, botitle, bocontent, bowriter, bodate, 
			to_char(bodate, 'yy-mm-dd hh24:mm:ss') bodate, bohit
		from free
		where 1=1
		order by bono desc	
	</select>
		
	<select id="selectFree" parameterType="int" resultType="freeVO">
		select
			*
		from free
		where bono = #{boNo}
	</select>
	
	<update id="updateFree" parameterType="freeVO">
		update free
		set
			botitle = #{boTitle},
			bocontent = #{boContent},
			bodate = sysdate
		where bono = #{boNo}	
	</update>
	
	<update id="incrementHit" parameterType="int">
		update free
		set
			bohit = bohit+1
		where bono = #{boNo}	
	</update>
	
	<delete id="deleteFree" parameterType="int">
		delete from free where bono = #{boNo}
	</delete>
	
	<select id="selectFreeCount" parameterType="pagingVO" resultType="int">
		select count(bono)
		from free
		where 1=1
		<include refid="freeSearch" />
	</select>
	
	<select id="selectFreeList2" parameterType="pagingVO" resultType="freeVO">
	select b.*
		from(	
			select
				a.*, row_number() over (order by a.bono desc) rnum
			from(	
				select 
					bono, botitle, bocontent, bowriter, 
					to_char(bodate, 'yy-mm-dd hh24:mi:ss') bodate, bohit
				from free
				where 1=1
				<include refid="freeSearch" />
				order by bono desc
			) a
		) b
		
		 <!--   CDATA :  >, < 같이 태그를 사용하는게 아니라 문자열로 인식하게 한다라는 뜻      -->
		<![CDATA[    
			where b.rnum >= #{startRow} and b.rnum <= #{endRow}
		]]> 
		
	
	</select>
</mapper>

